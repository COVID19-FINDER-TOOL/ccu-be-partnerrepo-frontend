{"version":3,"sources":["Components/Feedback/Feedback.module.scss","Components/Feedback/Feedback.js","Components/ConfirmationModal/ConfirmationModal.js","Components/ConfirmationModal/ConfirmationModal.module.scss"],"names":["module","exports","Feedback","props","componentDidMount","onEditInspection","experience","answers","feedback","smilySelector","id","CREATEJOURNEY","payload","1","2","3","4","5","console","log","setState","section2","positives","smilySelected","handleNext","section3","showNext","optionChecked","event","val","target","checked","push","filter","x","others","handleTextBox","e","text","value","submitFeedback","user_id","JSON","parse","window","localStorage","getItem","feedback_time","moment","utc","format","section1","section4","axiosLoginInstance","post","then","res","data","removeItem","catch","error","createButtons","arr","map","index","className","classes","label","type","checkbox","key","onChange","optionButtons","showHomeModal","state","history","gotoHome","backStack","journey_id","metadata","questionStack","responseStack","section","start_time","closeHomeModal","negatives","mobile","matchMedia","matches","this","backgroundImage","heading","modalFooter","message","litrals","gotoHomefromFeedback","showModal","onClick","onHide","style","height","overflow","paddingBottom","display","headingH1","smilyContainer","smilyDiv","icon","faGrinAlt","selected","disabled","smily","bind","faSmileBeam","faMeh","faFrown","faAngry","headingPara","optionsContainer","nextBtnDiv","width","buttons","nextStep","headingHx","Group","Control","bsPrefix","textarea","as","rows","placeholder","float","SubmitNav","thanksdiv","checkmark","xmlns","viewBox","checkmark__circle","cx","cy","r","fill","checkmark__check","d","thankYou","feedbackImportance","homebtn","fontSize","React","Component","FeedbackData","connect","surveyData","dispatch","ConfirmationModal","checkboxElement","includeCheckbox","localCheck","Check","checboxLeble","checkBoxFunction","Footer","variant","noButton","autoFocus","yesButton","dialogClassName","modalClass","backdrop","centered","closeConfirmationModal","show","size","Body","padding","split","item","i","formattedMsg","rawTextInTextarea","paddingTop","margin"],"mappings":"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","file":"static/js/9.7bd3b97c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundImage\":\"Feedback_backgroundImage__2Qpo2\",\"headingH1\":\"Feedback_headingH1__3DtXc\",\"headingHx\":\"Feedback_headingHx__zVw0v\",\"headingPara\":\"Feedback_headingPara__3CcP3\",\"logoPara\":\"Feedback_logoPara__1mjEz\",\"smilyContainer\":\"Feedback_smilyContainer__3vePi\",\"smilyDiv\":\"Feedback_smilyDiv__3b_NT\",\"smily\":\"Feedback_smily__15DZU\",\"selected\":\"Feedback_selected__290yC\",\"disabled\":\"Feedback_disabled__qhadb\",\"optionsContainer\":\"Feedback_optionsContainer__28C39\",\"checkbox\":\"Feedback_checkbox__2vG-x\",\"label\":\"Feedback_label__3qjXE\",\"optionButtons\":\"Feedback_optionButtons__1QXrK\",\"nextBtnDiv\":\"Feedback_nextBtnDiv__A-tCv\",\"textarea\":\"Feedback_textarea__26yqD\",\"textareasmall\":\"Feedback_textareasmall__2E-uB\",\"homebtn\":\"Feedback_homebtn__1mjIX\",\"thanksdiv\":\"Feedback_thanksdiv__258Pa\",\"thankYou\":\"Feedback_thankYou__1Yb4G\",\"display\":\"Feedback_display__3-0ws\",\"feedbackImportance\":\"Feedback_feedbackImportance__ISStq\",\"checkmark__circle\":\"Feedback_checkmark__circle__2Uo7B\",\"stroke\":\"Feedback_stroke__25eql\",\"checkmark\":\"Feedback_checkmark__1Sbi2\",\"fill\":\"Feedback_fill__1LjIW\",\"scale\":\"Feedback_scale__1ND9m\",\"checkmark__check\":\"Feedback_checkmark__check__1dLQ5\",\"body\":\"Feedback_body__1sWuP\"};","import React from 'react'\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport classes from './Feedback.module.scss';\r\nimport CustomButton from '../CustomButton/CustomButton';\r\nimport litrals from '../Litrals/Litrals';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { surveyData } from \"../../store/Action/SurveyAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { onEditInspection } from \"../../store/Action/LoginAction\";\r\nimport { axiosLoginInstance } from '../../AxiosHandler';\r\nimport Header from '../Header/Header';\r\nimport moment from \"moment\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ConfirmationModal from '../ConfirmationModal/ConfirmationModal';\r\nimport Footers from '../../Components/Footers/Footers';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGrinAlt, faSmileBeam, faMeh, faFrown, faAngry } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass Feedback extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            section1: true,\r\n            section2: false,\r\n            section3: false,\r\n            section4: false,\r\n            positives: false,\r\n            negatives: false,\r\n            showNext: true,\r\n            answers: [],\r\n            smilySelected: 0\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.onEditInspection({ Feedback: { experience: \"\", answers: [], feedback: \"\" } })\r\n    }\r\n\r\n    smilySelector = (id) => {\r\n        const exp = {\r\n            1: \"Satisfied\",\r\n            2: \"Happy\",\r\n            3: \"Unsatisfied\",\r\n            4: \"Sad\",\r\n            5: \"Angry\"\r\n        }\r\n        const { CREATEJOURNEY } = this.props.payload;\r\n        const { Feedback } = CREATEJOURNEY ? CREATEJOURNEY : \"\"\r\n        const feedback = Feedback\r\n        feedback.experience = exp[id]\r\n        console.log(feedback)\r\n        this.props.onEditInspection({ Feedback: feedback })\r\n        id <= 2 ? this.setState(() => { return { section2: true, positives: true, smilySelected: id } }) : this.setState(() => { return { section2: true, positives: false, smilySelected: id } })\r\n    }\r\n\r\n    handleNext = () => {\r\n        this.setState(() => { return { section3: true, showNext: false } })\r\n    }\r\n\r\n    optionChecked = (event) => {\r\n        const val = event.target;\r\n        const id = event.target.id\r\n        const { CREATEJOURNEY } = this.props.payload;\r\n        const { Feedback } = CREATEJOURNEY ? CREATEJOURNEY : []\r\n        var feedback = Feedback\r\n        if (val.checked) {\r\n            feedback.answers.push(id)\r\n        }\r\n        else if (!val.checked) {\r\n            feedback.answers = feedback.answers.filter(x => x != id)\r\n        }\r\n        this.props.onEditInspection({ Feedback: feedback })\r\n\r\n        id == 9 ? val.checked ? this.setState(() => { return { others: true } }) : this.setState(() => { return { others: false } }) : console.log()\r\n    }\r\n\r\n    handleTextBox = (e) => {\r\n        var text = e.target.value\r\n        var id = e.target.id\r\n        const { CREATEJOURNEY } = this.props.payload;\r\n        const { Feedback } = CREATEJOURNEY ? CREATEJOURNEY : \"\"\r\n        var feedback = Feedback\r\n        feedback.feedback = text;\r\n        this.props.onEditInspection({ Feedback: feedback })\r\n    }\r\n\r\n    submitFeedback = () => {\r\n        const { CREATEJOURNEY } = this.props.payload;\r\n        const { Feedback } = CREATEJOURNEY ? CREATEJOURNEY : \"\"\r\n        var feedback = Feedback\r\n        feedback.user_id = JSON.parse(window.localStorage.getItem(\"csf_user\")).user_id;\r\n        feedback.feedback_time = moment.utc().format('YYYY-MM-DD hh:mm:ss');\r\n        this.setState(() => { return { section1: false, section2: false, section3: false, section4: true } })\r\n        axiosLoginInstance.post(\"CFTFeedbackTrigger/feedback\", feedback)\r\n            .then(res => {\r\n                const data = res.data;\r\n                console.log(data);\r\n                window.localStorage.removeItem('csf_user')\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n\r\n\r\n    }\r\n\r\n    createButtons = (arr) => {\r\n        if (arr !== -1) {\r\n            const buttons = arr.map((x, index) => {\r\n                return (\r\n                    <div>\r\n\r\n                        <label className={classes.label}>\r\n                            <input type=\"checkbox\" className={classes.checkbox} id={index + 6} key={index + 6} onChange={this.optionChecked}></input>\r\n                            <div className={classes.optionButtons}>{x}</div>\r\n                        </label>\r\n                    </div>\r\n                )\r\n            })\r\n            return (buttons)\r\n        }\r\n\r\n    }\r\n\r\n    showHomeModal = () => {\r\n        const { CREATEJOURNEY } = this.props.payload;\r\n        const { Feedback } = CREATEJOURNEY ? CREATEJOURNEY : \"\"\r\n        Feedback.experience && !this.state.section4 ?  this.setState(() => { return { showHomeModal: true } }) : this.props.history.push(\"/\")\r\n    }\r\n\r\n    gotoHome = () => {\r\n        this.props.onEditInspection({\r\n            backStack: [],\r\n            journey_id: \"\",\r\n            metadata: \"\",\r\n            questionStack: [],\r\n            responseStack: [],\r\n            section: 0,\r\n            start_time: \"\",\r\n            Feedback:\"\"\r\n        })\r\n        this.props.history.push('/')\r\n\r\n    }\r\n\r\n    closeHomeModal = () => {\r\n        this.setState(() => { return { showHomeModal: false } })\r\n    }\r\n\r\n    render() {\r\n        const mobile = window.matchMedia(\"(max-width: 767px)\").matches;\r\n\r\n        const positives = [\"I found the support I needed\", \"I found stories and tips from other people helpful\", \"I found it easy to use the tool\"]\r\n        const negatives = [\"I didn’t find any support options\", \"The support options shown weren’t relevant to me\", \"I found it difficult to use the tool\"]\r\n        const optionButtons = this.createButtons(this.state.section2 ? this.state.positives ? positives : negatives : -1);\r\n        return (\r\n            <div className={classes.backgroundImage}>\r\n                <Header heading={7} showHomeModal={this.showHomeModal}></Header>\r\n                <ConfirmationModal modalFooter=\"dualButton\" message={litrals.gotoHomefromFeedback} showModal={this.state.showHomeModal} onClick={this.gotoHome} onHide={this.closeHomeModal} />\r\n                <Container>\r\n                    <Row>\r\n                        <Col style={{ height: \"80vh\", overflow: 'auto', paddingBottom: \"4rem\" }}>\r\n                            <div style={{ display: this.state.section1 ? \"block\" : \"none\" }}>\r\n                                <h5 className={classes.headingH1}>How would you rate your experience with the tool?</h5>\r\n                                <div className={classes.smilyContainer}>\r\n                                   <div className={classes.smilyDiv}> <FontAwesomeIcon id={1} icon={faGrinAlt} className={this.state.smilySelected ? this.state.smilySelected == 1 ? classes.selected : classes.disabled : classes.smily} onClick={this.smilySelector.bind(this, 1)} />  </div> \r\n                                   {/* <h6>Very Satisifed</h6> */}\r\n                                   <div className={classes.smilyDiv}> <FontAwesomeIcon id={2} icon={faSmileBeam} className={this.state.smilySelected ? this.state.smilySelected == 2 ? classes.selected : classes.disabled : classes.smily} onClick={this.smilySelector.bind(this, 2)} /> </div>\r\n                                   {/* <h6>Satisifed</h6>  */}\r\n                                   <div className={classes.smilyDiv}> <FontAwesomeIcon id={3} icon={faMeh} className={this.state.smilySelected ? this.state.smilySelected == 3 ? classes.selected : classes.disabled : classes.smily} onClick={this.smilySelector.bind(this, 3)} /> </div>\r\n                                   {/* <h6>Not Satisifed</h6>  */}\r\n                                   <div className={classes.smilyDiv}> <FontAwesomeIcon id={4} icon={faFrown} className={this.state.smilySelected ? this.state.smilySelected == 4 ? classes.selected : classes.disabled : classes.smily} onClick={this.smilySelector.bind(this, 4)} />  </div>\r\n                                   {/* <h6>Sad</h6> */}\r\n                                   <div className={classes.smilyDiv}> <FontAwesomeIcon id={5} icon={faAngry} className={this.state.smilySelected ? this.state.smilySelected == 5 ? classes.selected : classes.disabled : classes.smily} onClick={this.smilySelector.bind(this, 5)} /> </div>\r\n                                   {/* <h6>Angry</h6>  */}\r\n\r\n                                    {/* <button id={1}  value={\"satisfied\"} className={this.state.smilySelected ? this.state.smilySelected == 1 ? classes.selected : classes.disabled : classes.smily} color onClick={this.smilySelector.bind(this, 1)}>Very Satisifed</button>\r\n                                    <button id={2}  value={\"satisfied\"} className={this.state.smilySelected ? this.state.smilySelected == 2 ? classes.selected : classes.disabled : classes.smily} onClick={this.smilySelector.bind(this, 2)} >Satisifed</button>\r\n                                    <button id={3}  value={\"satisfied\"} className={this.state.smilySelected ? this.state.smilySelected == 3 ? classes.selected : classes.disabled : classes.smily} onClick={this.smilySelector.bind(this, 3)} >Not Satisfied</button>\r\n                                    <button id={4}  value={\"satisfied\"} className={this.state.smilySelected ? this.state.smilySelected == 4 ? classes.selected : classes.disabled : classes.smily} onClick={this.smilySelector.bind(this, 4)} >Sad</button>\r\n                                    <button id={5}  value={\"satisfied\"} className={this.state.smilySelected ? this.state.smilySelected == 5 ? classes.selected : classes.disabled : classes.smily} onClick={this.smilySelector.bind(this, 5)} >Angry</button> */}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={{ display: this.state.section2 ? \"block\" : \"none\" }}>\r\n                                <h5 className={classes.headingH1}>Please select from the following options:</h5>\r\n                                <p className={classes.headingPara}><em>Note: you can select multiple options</em></p>\r\n                                <div className={classes.optionsContainer}>\r\n                                    {optionButtons}\r\n                                </div>\r\n                                {this.state.showNext ? <div className={classes.nextBtnDiv}><CustomButton width={mobile ? \"100%\" : \"\"} type=\"submit\" onClick={this.handleNext} data={litrals.buttons.nextStep}></CustomButton></div> : ''}\r\n\r\n                            </div>\r\n\r\n                            <div style={{ display: this.state.section3 ? \"block\" : \"none\" }}>\r\n                                <h5 className={classes.headingHx}>Your feedback on how the tool can be improved to support more people would be greatly appreciated.</h5>\r\n                                <Form.Group >\r\n                                    <Form.Control id={11} onChange={this.handleTextBox} bsPrefix={classes.textarea} as=\"textarea\" rows=\"3\" placeholder={'Please share your thoughts and ideas here……'} />\r\n                                </Form.Group>\r\n                                <div className={classes.nextBtnDiv}><CustomButton type=\"submit\" float={\"right\"} width={mobile ? \"100%\" : \"\"} onClick={this.submitFeedback} data={litrals.buttons.SubmitNav}></CustomButton></div>\r\n                            </div>\r\n                            <div style={{ display: this.state.section4 ? \"block\" : \"none\" }} className={classes.thanksdiv}>\r\n                                <svg className={classes.checkmark} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\r\n                                    <circle className={classes.checkmark__circle} cx=\"26\" cy=\"26\" r=\"25\" fill=\"green\" />\r\n                                    <path className={classes.checkmark__check} fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\r\n                                </svg>\r\n\r\n                                <h5 className={classes.thankYou}>Thank you!</h5>\r\n                                <h5 className={classes.feedbackImportance}> Your feedback is important to us. </h5>\r\n                                <div className={classes.homebtn}><HomeIcon  onClick={this.gotoHome} style={{ fontSize: \"2.7rem\" }}></HomeIcon></div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n\r\n                {!mobile ? <Footers format = {true}></Footers>:null}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { payload: state.surveyData };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onEditInspection: data => dispatch(onEditInspection(data)),\r\n        surveyData: data => dispatch(surveyData(data))\r\n    };\r\n};\r\n\r\nconst FeedbackData = connect(mapStateToProps, mapDispatchToProps)(Feedback);\r\n\r\nexport default FeedbackData;","import React, { Component } from 'react';\r\nimport {Modal, Button,Form,Col} from 'react-bootstrap'\r\nimport classes from './ConfirmationModal.module.scss'\r\nimport {FormControl} from 'react-bootstrap'\r\n\r\n\r\nclass ConfirmationModal extends Component {\r\n      render () {\r\n        let modalFooter='';\r\n        let checkboxElement=\"\"\r\n\r\n        if(this.props.includeCheckbox &&  this.props.localCheck)\r\n            checkboxElement=<Form.Check type=\"checkbox\" label={this.props.checboxLeble}  onClick={this.props.checkBoxFunction}/>\r\n        if(this.props.modalFooter===\"dualButton\")\r\n             modalFooter =  <Modal.Footer>\r\n                                <Button variant=\"primary\" className={classes.noButton} onClick={this.props.onHide}>Cancel</Button>\r\n                                <Button autoFocus={true} variant=\"primary\" className={classes.yesButton} onClick={this.props.onClick}>Submit</Button>\r\n                           </Modal.Footer>\r\n        else\r\n             modalFooter =  <div>\r\n                                <Modal.Footer><Button variant=\"primary\" onClick={this.props.onClick}>Ok</Button></Modal.Footer> \r\n                                <Col className=\"mb-2\">{checkboxElement}</Col> \r\n                            </div>\r\n                            \r\n        return (\r\n            <Modal dialogClassName={this.props.modalClass ? classes[this.props.modalClass] : \"\" } backdrop={this.props.modalClass ? false : true } autoFocus={false} centered={true} onHide={this.props.closeConfirmationModal} show={this.props.showModal} size={this.props.modalClass ? \"lg\":\"xs\"}>\r\n            <Modal.Body style={{padding:\"2rem\"}}> \r\n             { this.props.message ? this.props.message.split ('\\n').map ((item, i) => <p key={i}>{item}</p>) : this.props.formattedMsg ?  this.props.formattedMsg : this.props.rawTextInTextarea?this.props.rawTextInTextarea.split ('\\n').map ((item, i) => <p style={{paddingBottom:\"1px\", paddingTop:\"0px\", margin:\"1px\"}} key={i}>{item}</p>) : console.log() }\r\n             </Modal.Body>           \r\n             {modalFooter}\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConfirmationModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"ConfirmationModal_Modal__3jKOX\",\"Modal-Left\":\"ConfirmationModal_Modal-Left__16eKI\",\"modalTestArea\":\"ConfirmationModal_modalTestArea__41XWR\",\"yesButton\":\"ConfirmationModal_yesButton__1mSV8\",\"noButton\":\"ConfirmationModal_noButton__KJawg\"};"],"sourceRoot":""}